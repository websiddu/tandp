#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="tandp_db")]
public partial class Datbase_ClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void Insertaspnet_Application(aspnet_Application instance);
  partial void Updateaspnet_Application(aspnet_Application instance);
  partial void Deleteaspnet_Application(aspnet_Application instance);
  partial void Insertaspnet_Membership(aspnet_Membership instance);
  partial void Updateaspnet_Membership(aspnet_Membership instance);
  partial void Deleteaspnet_Membership(aspnet_Membership instance);
  partial void Insertaspnet_Path(aspnet_Path instance);
  partial void Updateaspnet_Path(aspnet_Path instance);
  partial void Deleteaspnet_Path(aspnet_Path instance);
  partial void Insertaspnet_PersonalizationAllUser(aspnet_PersonalizationAllUser instance);
  partial void Updateaspnet_PersonalizationAllUser(aspnet_PersonalizationAllUser instance);
  partial void Deleteaspnet_PersonalizationAllUser(aspnet_PersonalizationAllUser instance);
  partial void Insertaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser instance);
  partial void Updateaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser instance);
  partial void Deleteaspnet_PersonalizationPerUser(aspnet_PersonalizationPerUser instance);
  partial void Insertaspnet_Profile(aspnet_Profile instance);
  partial void Updateaspnet_Profile(aspnet_Profile instance);
  partial void Deleteaspnet_Profile(aspnet_Profile instance);
  partial void Insertaspnet_Role(aspnet_Role instance);
  partial void Updateaspnet_Role(aspnet_Role instance);
  partial void Deleteaspnet_Role(aspnet_Role instance);
  partial void Insertaspnet_SchemaVersion(aspnet_SchemaVersion instance);
  partial void Updateaspnet_SchemaVersion(aspnet_SchemaVersion instance);
  partial void Deleteaspnet_SchemaVersion(aspnet_SchemaVersion instance);
  partial void Insertaspnet_User(aspnet_User instance);
  partial void Updateaspnet_User(aspnet_User instance);
  partial void Deleteaspnet_User(aspnet_User instance);
  partial void Insertaspnet_UsersInRole(aspnet_UsersInRole instance);
  partial void Updateaspnet_UsersInRole(aspnet_UsersInRole instance);
  partial void Deleteaspnet_UsersInRole(aspnet_UsersInRole instance);
  partial void Insertaspnet_WebEvent_Event(aspnet_WebEvent_Event instance);
  partial void Updateaspnet_WebEvent_Event(aspnet_WebEvent_Event instance);
  partial void Deleteaspnet_WebEvent_Event(aspnet_WebEvent_Event instance);
  partial void InsertYear(Year instance);
  partial void UpdateYear(Year instance);
  partial void DeleteYear(Year instance);
  partial void InsertCourse(Course instance);
  partial void UpdateCourse(Course instance);
  partial void DeleteCourse(Course instance);
  partial void InsertDepartment(Department instance);
  partial void UpdateDepartment(Department instance);
  partial void DeleteDepartment(Department instance);
  partial void InsertPlacement(Placement instance);
  partial void UpdatePlacement(Placement instance);
  partial void DeletePlacement(Placement instance);
  partial void InsertCompany(Company instance);
  partial void UpdateCompany(Company instance);
  partial void DeleteCompany(Company instance);
  partial void Insertprivate_messaging(private_messaging instance);
  partial void Updateprivate_messaging(private_messaging instance);
  partial void Deleteprivate_messaging(private_messaging instance);
  partial void InsertStudent(Student instance);
  partial void UpdateStudent(Student instance);
  partial void DeleteStudent(Student instance);
  partial void InsertCoordinator(Coordinator instance);
  partial void UpdateCoordinator(Coordinator instance);
  partial void DeleteCoordinator(Coordinator instance);
  partial void Insertannouncement(announcement instance);
  partial void Updateannouncement(announcement instance);
  partial void Deleteannouncement(announcement instance);
  #endregion
	
	public Datbase_ClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["tandp_db_connection_string"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public Datbase_ClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public Datbase_ClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public Datbase_ClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public Datbase_ClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<aspnet_Application> aspnet_Applications
	{
		get
		{
			return this.GetTable<aspnet_Application>();
		}
	}
	
	public System.Data.Linq.Table<aspnet_Membership> aspnet_Memberships
	{
		get
		{
			return this.GetTable<aspnet_Membership>();
		}
	}
	
	public System.Data.Linq.Table<aspnet_Path> aspnet_Paths
	{
		get
		{
			return this.GetTable<aspnet_Path>();
		}
	}
	
	public System.Data.Linq.Table<aspnet_PersonalizationAllUser> aspnet_PersonalizationAllUsers
	{
		get
		{
			return this.GetTable<aspnet_PersonalizationAllUser>();
		}
	}
	
	public System.Data.Linq.Table<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUsers
	{
		get
		{
			return this.GetTable<aspnet_PersonalizationPerUser>();
		}
	}
	
	public System.Data.Linq.Table<aspnet_Profile> aspnet_Profiles
	{
		get
		{
			return this.GetTable<aspnet_Profile>();
		}
	}
	
	public System.Data.Linq.Table<aspnet_Role> aspnet_Roles
	{
		get
		{
			return this.GetTable<aspnet_Role>();
		}
	}
	
	public System.Data.Linq.Table<aspnet_SchemaVersion> aspnet_SchemaVersions
	{
		get
		{
			return this.GetTable<aspnet_SchemaVersion>();
		}
	}
	
	public System.Data.Linq.Table<aspnet_User> aspnet_Users
	{
		get
		{
			return this.GetTable<aspnet_User>();
		}
	}
	
	public System.Data.Linq.Table<aspnet_UsersInRole> aspnet_UsersInRoles
	{
		get
		{
			return this.GetTable<aspnet_UsersInRole>();
		}
	}
	
	public System.Data.Linq.Table<aspnet_WebEvent_Event> aspnet_WebEvent_Events
	{
		get
		{
			return this.GetTable<aspnet_WebEvent_Event>();
		}
	}
	
	public System.Data.Linq.Table<Year> Years
	{
		get
		{
			return this.GetTable<Year>();
		}
	}
	
	public System.Data.Linq.Table<Course> Courses
	{
		get
		{
			return this.GetTable<Course>();
		}
	}
	
	public System.Data.Linq.Table<Department> Departments
	{
		get
		{
			return this.GetTable<Department>();
		}
	}
	
	public System.Data.Linq.Table<Placement> Placements
	{
		get
		{
			return this.GetTable<Placement>();
		}
	}
	
	public System.Data.Linq.Table<Company> Companies
	{
		get
		{
			return this.GetTable<Company>();
		}
	}
	
	public System.Data.Linq.Table<private_messaging> private_messagings
	{
		get
		{
			return this.GetTable<private_messaging>();
		}
	}
	
	public System.Data.Linq.Table<Student> Students
	{
		get
		{
			return this.GetTable<Student>();
		}
	}
	
	public System.Data.Linq.Table<Coordinator> Coordinators
	{
		get
		{
			return this.GetTable<Coordinator>();
		}
	}
	
	public System.Data.Linq.Table<announcement> announcements
	{
		get
		{
			return this.GetTable<announcement>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Applications")]
public partial class aspnet_Application : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _ApplicationName;
	
	private string _LoweredApplicationName;
	
	private System.Guid _ApplicationId;
	
	private string _Description;
	
	private EntitySet<aspnet_Membership> _aspnet_Memberships;
	
	private EntitySet<aspnet_Path> _aspnet_Paths;
	
	private EntitySet<aspnet_Role> _aspnet_Roles;
	
	private EntitySet<aspnet_User> _aspnet_Users;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationNameChanging(string value);
    partial void OnApplicationNameChanged();
    partial void OnLoweredApplicationNameChanging(string value);
    partial void OnLoweredApplicationNameChanged();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
	
	public aspnet_Application()
	{
		this._aspnet_Memberships = new EntitySet<aspnet_Membership>(new Action<aspnet_Membership>(this.attach_aspnet_Memberships), new Action<aspnet_Membership>(this.detach_aspnet_Memberships));
		this._aspnet_Paths = new EntitySet<aspnet_Path>(new Action<aspnet_Path>(this.attach_aspnet_Paths), new Action<aspnet_Path>(this.detach_aspnet_Paths));
		this._aspnet_Roles = new EntitySet<aspnet_Role>(new Action<aspnet_Role>(this.attach_aspnet_Roles), new Action<aspnet_Role>(this.detach_aspnet_Roles));
		this._aspnet_Users = new EntitySet<aspnet_User>(new Action<aspnet_User>(this.attach_aspnet_Users), new Action<aspnet_User>(this.detach_aspnet_Users));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string ApplicationName
	{
		get
		{
			return this._ApplicationName;
		}
		set
		{
			if ((this._ApplicationName != value))
			{
				this.OnApplicationNameChanging(value);
				this.SendPropertyChanging();
				this._ApplicationName = value;
				this.SendPropertyChanged("ApplicationName");
				this.OnApplicationNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredApplicationName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string LoweredApplicationName
	{
		get
		{
			return this._LoweredApplicationName;
		}
		set
		{
			if ((this._LoweredApplicationName != value))
			{
				this.OnLoweredApplicationNameChanging(value);
				this.SendPropertyChanging();
				this._LoweredApplicationName = value;
				this.SendPropertyChanged("LoweredApplicationName");
				this.OnLoweredApplicationNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid ApplicationId
	{
		get
		{
			return this._ApplicationId;
		}
		set
		{
			if ((this._ApplicationId != value))
			{
				this.OnApplicationIdChanging(value);
				this.SendPropertyChanging();
				this._ApplicationId = value;
				this.SendPropertyChanged("ApplicationId");
				this.OnApplicationIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Membership", Storage="_aspnet_Memberships", ThisKey="ApplicationId", OtherKey="ApplicationId")]
	public EntitySet<aspnet_Membership> aspnet_Memberships
	{
		get
		{
			return this._aspnet_Memberships;
		}
		set
		{
			this._aspnet_Memberships.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Path", Storage="_aspnet_Paths", ThisKey="ApplicationId", OtherKey="ApplicationId")]
	public EntitySet<aspnet_Path> aspnet_Paths
	{
		get
		{
			return this._aspnet_Paths;
		}
		set
		{
			this._aspnet_Paths.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Role", Storage="_aspnet_Roles", ThisKey="ApplicationId", OtherKey="ApplicationId")]
	public EntitySet<aspnet_Role> aspnet_Roles
	{
		get
		{
			return this._aspnet_Roles;
		}
		set
		{
			this._aspnet_Roles.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_User", Storage="_aspnet_Users", ThisKey="ApplicationId", OtherKey="ApplicationId")]
	public EntitySet<aspnet_User> aspnet_Users
	{
		get
		{
			return this._aspnet_Users;
		}
		set
		{
			this._aspnet_Users.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_aspnet_Memberships(aspnet_Membership entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Application = this;
	}
	
	private void detach_aspnet_Memberships(aspnet_Membership entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Application = null;
	}
	
	private void attach_aspnet_Paths(aspnet_Path entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Application = this;
	}
	
	private void detach_aspnet_Paths(aspnet_Path entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Application = null;
	}
	
	private void attach_aspnet_Roles(aspnet_Role entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Application = this;
	}
	
	private void detach_aspnet_Roles(aspnet_Role entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Application = null;
	}
	
	private void attach_aspnet_Users(aspnet_User entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Application = this;
	}
	
	private void detach_aspnet_Users(aspnet_User entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Application = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Membership")]
public partial class aspnet_Membership : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _ApplicationId;
	
	private System.Guid _UserId;
	
	private string _Password;
	
	private int _PasswordFormat;
	
	private string _PasswordSalt;
	
	private string _MobilePIN;
	
	private string _Email;
	
	private string _LoweredEmail;
	
	private string _PasswordQuestion;
	
	private string _PasswordAnswer;
	
	private bool _IsApproved;
	
	private bool _IsLockedOut;
	
	private System.DateTime _CreateDate;
	
	private System.DateTime _LastLoginDate;
	
	private System.DateTime _LastPasswordChangedDate;
	
	private System.DateTime _LastLockoutDate;
	
	private int _FailedPasswordAttemptCount;
	
	private System.DateTime _FailedPasswordAttemptWindowStart;
	
	private int _FailedPasswordAnswerAttemptCount;
	
	private System.DateTime _FailedPasswordAnswerAttemptWindowStart;
	
	private string _Comment;
	
	private EntityRef<aspnet_Application> _aspnet_Application;
	
	private EntityRef<aspnet_User> _aspnet_User;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnPasswordFormatChanging(int value);
    partial void OnPasswordFormatChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnMobilePINChanging(string value);
    partial void OnMobilePINChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLoweredEmailChanging(string value);
    partial void OnLoweredEmailChanged();
    partial void OnPasswordQuestionChanging(string value);
    partial void OnPasswordQuestionChanged();
    partial void OnPasswordAnswerChanging(string value);
    partial void OnPasswordAnswerChanged();
    partial void OnIsApprovedChanging(bool value);
    partial void OnIsApprovedChanged();
    partial void OnIsLockedOutChanging(bool value);
    partial void OnIsLockedOutChanged();
    partial void OnCreateDateChanging(System.DateTime value);
    partial void OnCreateDateChanged();
    partial void OnLastLoginDateChanging(System.DateTime value);
    partial void OnLastLoginDateChanged();
    partial void OnLastPasswordChangedDateChanging(System.DateTime value);
    partial void OnLastPasswordChangedDateChanged();
    partial void OnLastLockoutDateChanging(System.DateTime value);
    partial void OnLastLockoutDateChanged();
    partial void OnFailedPasswordAttemptCountChanging(int value);
    partial void OnFailedPasswordAttemptCountChanged();
    partial void OnFailedPasswordAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAttemptWindowStartChanged();
    partial void OnFailedPasswordAnswerAttemptCountChanging(int value);
    partial void OnFailedPasswordAnswerAttemptCountChanged();
    partial void OnFailedPasswordAnswerAttemptWindowStartChanging(System.DateTime value);
    partial void OnFailedPasswordAnswerAttemptWindowStartChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
	
	public aspnet_Membership()
	{
		this._aspnet_Application = default(EntityRef<aspnet_Application>);
		this._aspnet_User = default(EntityRef<aspnet_User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid ApplicationId
	{
		get
		{
			return this._ApplicationId;
		}
		set
		{
			if ((this._ApplicationId != value))
			{
				if (this._aspnet_Application.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnApplicationIdChanging(value);
				this.SendPropertyChanging();
				this._ApplicationId = value;
				this.SendPropertyChanged("ApplicationId");
				this.OnApplicationIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				if (this._aspnet_User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordFormat", DbType="Int NOT NULL")]
	public int PasswordFormat
	{
		get
		{
			return this._PasswordFormat;
		}
		set
		{
			if ((this._PasswordFormat != value))
			{
				this.OnPasswordFormatChanging(value);
				this.SendPropertyChanging();
				this._PasswordFormat = value;
				this.SendPropertyChanged("PasswordFormat");
				this.OnPasswordFormatChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
	public string PasswordSalt
	{
		get
		{
			return this._PasswordSalt;
		}
		set
		{
			if ((this._PasswordSalt != value))
			{
				this.OnPasswordSaltChanging(value);
				this.SendPropertyChanging();
				this._PasswordSalt = value;
				this.SendPropertyChanged("PasswordSalt");
				this.OnPasswordSaltChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobilePIN", DbType="NVarChar(16)")]
	public string MobilePIN
	{
		get
		{
			return this._MobilePIN;
		}
		set
		{
			if ((this._MobilePIN != value))
			{
				this.OnMobilePINChanging(value);
				this.SendPropertyChanging();
				this._MobilePIN = value;
				this.SendPropertyChanged("MobilePIN");
				this.OnMobilePINChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(256)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredEmail", DbType="NVarChar(256)")]
	public string LoweredEmail
	{
		get
		{
			return this._LoweredEmail;
		}
		set
		{
			if ((this._LoweredEmail != value))
			{
				this.OnLoweredEmailChanging(value);
				this.SendPropertyChanging();
				this._LoweredEmail = value;
				this.SendPropertyChanged("LoweredEmail");
				this.OnLoweredEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordQuestion", DbType="NVarChar(256)")]
	public string PasswordQuestion
	{
		get
		{
			return this._PasswordQuestion;
		}
		set
		{
			if ((this._PasswordQuestion != value))
			{
				this.OnPasswordQuestionChanging(value);
				this.SendPropertyChanging();
				this._PasswordQuestion = value;
				this.SendPropertyChanged("PasswordQuestion");
				this.OnPasswordQuestionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordAnswer", DbType="NVarChar(128)")]
	public string PasswordAnswer
	{
		get
		{
			return this._PasswordAnswer;
		}
		set
		{
			if ((this._PasswordAnswer != value))
			{
				this.OnPasswordAnswerChanging(value);
				this.SendPropertyChanging();
				this._PasswordAnswer = value;
				this.SendPropertyChanged("PasswordAnswer");
				this.OnPasswordAnswerChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsApproved", DbType="Bit NOT NULL")]
	public bool IsApproved
	{
		get
		{
			return this._IsApproved;
		}
		set
		{
			if ((this._IsApproved != value))
			{
				this.OnIsApprovedChanging(value);
				this.SendPropertyChanging();
				this._IsApproved = value;
				this.SendPropertyChanged("IsApproved");
				this.OnIsApprovedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLockedOut", DbType="Bit NOT NULL")]
	public bool IsLockedOut
	{
		get
		{
			return this._IsLockedOut;
		}
		set
		{
			if ((this._IsLockedOut != value))
			{
				this.OnIsLockedOutChanging(value);
				this.SendPropertyChanging();
				this._IsLockedOut = value;
				this.SendPropertyChanged("IsLockedOut");
				this.OnIsLockedOutChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime NOT NULL")]
	public System.DateTime CreateDate
	{
		get
		{
			return this._CreateDate;
		}
		set
		{
			if ((this._CreateDate != value))
			{
				this.OnCreateDateChanging(value);
				this.SendPropertyChanging();
				this._CreateDate = value;
				this.SendPropertyChanged("CreateDate");
				this.OnCreateDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
	public System.DateTime LastLoginDate
	{
		get
		{
			return this._LastLoginDate;
		}
		set
		{
			if ((this._LastLoginDate != value))
			{
				this.OnLastLoginDateChanging(value);
				this.SendPropertyChanging();
				this._LastLoginDate = value;
				this.SendPropertyChanged("LastLoginDate");
				this.OnLastLoginDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPasswordChangedDate", DbType="DateTime NOT NULL")]
	public System.DateTime LastPasswordChangedDate
	{
		get
		{
			return this._LastPasswordChangedDate;
		}
		set
		{
			if ((this._LastPasswordChangedDate != value))
			{
				this.OnLastPasswordChangedDateChanging(value);
				this.SendPropertyChanging();
				this._LastPasswordChangedDate = value;
				this.SendPropertyChanged("LastPasswordChangedDate");
				this.OnLastPasswordChangedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLockoutDate", DbType="DateTime NOT NULL")]
	public System.DateTime LastLockoutDate
	{
		get
		{
			return this._LastLockoutDate;
		}
		set
		{
			if ((this._LastLockoutDate != value))
			{
				this.OnLastLockoutDateChanging(value);
				this.SendPropertyChanging();
				this._LastLockoutDate = value;
				this.SendPropertyChanged("LastLockoutDate");
				this.OnLastLockoutDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptCount", DbType="Int NOT NULL")]
	public int FailedPasswordAttemptCount
	{
		get
		{
			return this._FailedPasswordAttemptCount;
		}
		set
		{
			if ((this._FailedPasswordAttemptCount != value))
			{
				this.OnFailedPasswordAttemptCountChanging(value);
				this.SendPropertyChanging();
				this._FailedPasswordAttemptCount = value;
				this.SendPropertyChanged("FailedPasswordAttemptCount");
				this.OnFailedPasswordAttemptCountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAttemptWindowStart", DbType="DateTime NOT NULL")]
	public System.DateTime FailedPasswordAttemptWindowStart
	{
		get
		{
			return this._FailedPasswordAttemptWindowStart;
		}
		set
		{
			if ((this._FailedPasswordAttemptWindowStart != value))
			{
				this.OnFailedPasswordAttemptWindowStartChanging(value);
				this.SendPropertyChanging();
				this._FailedPasswordAttemptWindowStart = value;
				this.SendPropertyChanged("FailedPasswordAttemptWindowStart");
				this.OnFailedPasswordAttemptWindowStartChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptCount", DbType="Int NOT NULL")]
	public int FailedPasswordAnswerAttemptCount
	{
		get
		{
			return this._FailedPasswordAnswerAttemptCount;
		}
		set
		{
			if ((this._FailedPasswordAnswerAttemptCount != value))
			{
				this.OnFailedPasswordAnswerAttemptCountChanging(value);
				this.SendPropertyChanging();
				this._FailedPasswordAnswerAttemptCount = value;
				this.SendPropertyChanged("FailedPasswordAnswerAttemptCount");
				this.OnFailedPasswordAnswerAttemptCountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FailedPasswordAnswerAttemptWindowStart", DbType="DateTime NOT NULL")]
	public System.DateTime FailedPasswordAnswerAttemptWindowStart
	{
		get
		{
			return this._FailedPasswordAnswerAttemptWindowStart;
		}
		set
		{
			if ((this._FailedPasswordAnswerAttemptWindowStart != value))
			{
				this.OnFailedPasswordAnswerAttemptWindowStartChanging(value);
				this.SendPropertyChanging();
				this._FailedPasswordAnswerAttemptWindowStart = value;
				this.SendPropertyChanged("FailedPasswordAnswerAttemptWindowStart");
				this.OnFailedPasswordAnswerAttemptWindowStartChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Comment
	{
		get
		{
			return this._Comment;
		}
		set
		{
			if ((this._Comment != value))
			{
				this.OnCommentChanging(value);
				this.SendPropertyChanging();
				this._Comment = value;
				this.SendPropertyChanged("Comment");
				this.OnCommentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Membership", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
	public aspnet_Application aspnet_Application
	{
		get
		{
			return this._aspnet_Application.Entity;
		}
		set
		{
			aspnet_Application previousValue = this._aspnet_Application.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_Application.Entity = null;
					previousValue.aspnet_Memberships.Remove(this);
				}
				this._aspnet_Application.Entity = value;
				if ((value != null))
				{
					value.aspnet_Memberships.Add(this);
					this._ApplicationId = value.ApplicationId;
				}
				else
				{
					this._ApplicationId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_Application");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
	public aspnet_User aspnet_User
	{
		get
		{
			return this._aspnet_User.Entity;
		}
		set
		{
			aspnet_User previousValue = this._aspnet_User.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_User.Entity = null;
					previousValue.aspnet_Membership = null;
				}
				this._aspnet_User.Entity = value;
				if ((value != null))
				{
					value.aspnet_Membership = this;
					this._UserId = value.UserId;
				}
				else
				{
					this._UserId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_User");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Paths")]
public partial class aspnet_Path : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _ApplicationId;
	
	private System.Guid _PathId;
	
	private string _Path;
	
	private string _LoweredPath;
	
	private EntityRef<aspnet_PersonalizationAllUser> _aspnet_PersonalizationAllUser;
	
	private EntitySet<aspnet_PersonalizationPerUser> _aspnet_PersonalizationPerUsers;
	
	private EntityRef<aspnet_Application> _aspnet_Application;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnPathIdChanging(System.Guid value);
    partial void OnPathIdChanged();
    partial void OnPathChanging(string value);
    partial void OnPathChanged();
    partial void OnLoweredPathChanging(string value);
    partial void OnLoweredPathChanged();
    #endregion
	
	public aspnet_Path()
	{
		this._aspnet_PersonalizationAllUser = default(EntityRef<aspnet_PersonalizationAllUser>);
		this._aspnet_PersonalizationPerUsers = new EntitySet<aspnet_PersonalizationPerUser>(new Action<aspnet_PersonalizationPerUser>(this.attach_aspnet_PersonalizationPerUsers), new Action<aspnet_PersonalizationPerUser>(this.detach_aspnet_PersonalizationPerUsers));
		this._aspnet_Application = default(EntityRef<aspnet_Application>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid ApplicationId
	{
		get
		{
			return this._ApplicationId;
		}
		set
		{
			if ((this._ApplicationId != value))
			{
				if (this._aspnet_Application.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnApplicationIdChanging(value);
				this.SendPropertyChanging();
				this._ApplicationId = value;
				this.SendPropertyChanged("ApplicationId");
				this.OnApplicationIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid PathId
	{
		get
		{
			return this._PathId;
		}
		set
		{
			if ((this._PathId != value))
			{
				this.OnPathIdChanging(value);
				this.SendPropertyChanging();
				this._PathId = value;
				this.SendPropertyChanged("PathId");
				this.OnPathIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Path", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string Path
	{
		get
		{
			return this._Path;
		}
		set
		{
			if ((this._Path != value))
			{
				this.OnPathChanging(value);
				this.SendPropertyChanging();
				this._Path = value;
				this.SendPropertyChanged("Path");
				this.OnPathChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredPath", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string LoweredPath
	{
		get
		{
			return this._LoweredPath;
		}
		set
		{
			if ((this._LoweredPath != value))
			{
				this.OnLoweredPathChanging(value);
				this.SendPropertyChanging();
				this._LoweredPath = value;
				this.SendPropertyChanged("LoweredPath");
				this.OnLoweredPathChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationAllUser", Storage="_aspnet_PersonalizationAllUser", ThisKey="PathId", OtherKey="PathId", IsUnique=true, IsForeignKey=false)]
	public aspnet_PersonalizationAllUser aspnet_PersonalizationAllUser
	{
		get
		{
			return this._aspnet_PersonalizationAllUser.Entity;
		}
		set
		{
			aspnet_PersonalizationAllUser previousValue = this._aspnet_PersonalizationAllUser.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_PersonalizationAllUser.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_PersonalizationAllUser.Entity = null;
					previousValue.aspnet_Path = null;
				}
				this._aspnet_PersonalizationAllUser.Entity = value;
				if ((value != null))
				{
					value.aspnet_Path = this;
				}
				this.SendPropertyChanged("aspnet_PersonalizationAllUser");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationPerUser", Storage="_aspnet_PersonalizationPerUsers", ThisKey="PathId", OtherKey="PathId")]
	public EntitySet<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUsers
	{
		get
		{
			return this._aspnet_PersonalizationPerUsers;
		}
		set
		{
			this._aspnet_PersonalizationPerUsers.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Path", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
	public aspnet_Application aspnet_Application
	{
		get
		{
			return this._aspnet_Application.Entity;
		}
		set
		{
			aspnet_Application previousValue = this._aspnet_Application.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_Application.Entity = null;
					previousValue.aspnet_Paths.Remove(this);
				}
				this._aspnet_Application.Entity = value;
				if ((value != null))
				{
					value.aspnet_Paths.Add(this);
					this._ApplicationId = value.ApplicationId;
				}
				else
				{
					this._ApplicationId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_Application");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Path = this;
	}
	
	private void detach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Path = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_PersonalizationAllUsers")]
public partial class aspnet_PersonalizationAllUser : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _PathId;
	
	private System.Data.Linq.Binary _PageSettings;
	
	private System.DateTime _LastUpdatedDate;
	
	private EntityRef<aspnet_Path> _aspnet_Path;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPathIdChanging(System.Guid value);
    partial void OnPathIdChanged();
    partial void OnPageSettingsChanging(System.Data.Linq.Binary value);
    partial void OnPageSettingsChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
	
	public aspnet_PersonalizationAllUser()
	{
		this._aspnet_Path = default(EntityRef<aspnet_Path>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid PathId
	{
		get
		{
			return this._PathId;
		}
		set
		{
			if ((this._PathId != value))
			{
				if (this._aspnet_Path.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnPathIdChanging(value);
				this.SendPropertyChanging();
				this._PathId = value;
				this.SendPropertyChanged("PathId");
				this.OnPathIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageSettings", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public System.Data.Linq.Binary PageSettings
	{
		get
		{
			return this._PageSettings;
		}
		set
		{
			if ((this._PageSettings != value))
			{
				this.OnPageSettingsChanging(value);
				this.SendPropertyChanging();
				this._PageSettings = value;
				this.SendPropertyChanged("PageSettings");
				this.OnPageSettingsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
	public System.DateTime LastUpdatedDate
	{
		get
		{
			return this._LastUpdatedDate;
		}
		set
		{
			if ((this._LastUpdatedDate != value))
			{
				this.OnLastUpdatedDateChanging(value);
				this.SendPropertyChanging();
				this._LastUpdatedDate = value;
				this.SendPropertyChanged("LastUpdatedDate");
				this.OnLastUpdatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationAllUser", Storage="_aspnet_Path", ThisKey="PathId", OtherKey="PathId", IsForeignKey=true)]
	public aspnet_Path aspnet_Path
	{
		get
		{
			return this._aspnet_Path.Entity;
		}
		set
		{
			aspnet_Path previousValue = this._aspnet_Path.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_Path.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_Path.Entity = null;
					previousValue.aspnet_PersonalizationAllUser = null;
				}
				this._aspnet_Path.Entity = value;
				if ((value != null))
				{
					value.aspnet_PersonalizationAllUser = this;
					this._PathId = value.PathId;
				}
				else
				{
					this._PathId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_Path");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_PersonalizationPerUser")]
public partial class aspnet_PersonalizationPerUser : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _Id;
	
	private System.Nullable<System.Guid> _PathId;
	
	private System.Nullable<System.Guid> _UserId;
	
	private System.Data.Linq.Binary _PageSettings;
	
	private System.DateTime _LastUpdatedDate;
	
	private EntityRef<aspnet_Path> _aspnet_Path;
	
	private EntityRef<aspnet_User> _aspnet_User;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnPathIdChanging(System.Nullable<System.Guid> value);
    partial void OnPathIdChanged();
    partial void OnUserIdChanging(System.Nullable<System.Guid> value);
    partial void OnUserIdChanged();
    partial void OnPageSettingsChanging(System.Data.Linq.Binary value);
    partial void OnPageSettingsChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
	
	public aspnet_PersonalizationPerUser()
	{
		this._aspnet_Path = default(EntityRef<aspnet_Path>);
		this._aspnet_User = default(EntityRef<aspnet_User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathId", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> PathId
	{
		get
		{
			return this._PathId;
		}
		set
		{
			if ((this._PathId != value))
			{
				if (this._aspnet_Path.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnPathIdChanging(value);
				this.SendPropertyChanging();
				this._PathId = value;
				this.SendPropertyChanged("PathId");
				this.OnPathIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				if (this._aspnet_User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageSettings", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public System.Data.Linq.Binary PageSettings
	{
		get
		{
			return this._PageSettings;
		}
		set
		{
			if ((this._PageSettings != value))
			{
				this.OnPageSettingsChanging(value);
				this.SendPropertyChanging();
				this._PageSettings = value;
				this.SendPropertyChanged("PageSettings");
				this.OnPageSettingsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
	public System.DateTime LastUpdatedDate
	{
		get
		{
			return this._LastUpdatedDate;
		}
		set
		{
			if ((this._LastUpdatedDate != value))
			{
				this.OnLastUpdatedDateChanging(value);
				this.SendPropertyChanging();
				this._LastUpdatedDate = value;
				this.SendPropertyChanged("LastUpdatedDate");
				this.OnLastUpdatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Path_aspnet_PersonalizationPerUser", Storage="_aspnet_Path", ThisKey="PathId", OtherKey="PathId", IsForeignKey=true)]
	public aspnet_Path aspnet_Path
	{
		get
		{
			return this._aspnet_Path.Entity;
		}
		set
		{
			aspnet_Path previousValue = this._aspnet_Path.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_Path.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_Path.Entity = null;
					previousValue.aspnet_PersonalizationPerUsers.Remove(this);
				}
				this._aspnet_Path.Entity = value;
				if ((value != null))
				{
					value.aspnet_PersonalizationPerUsers.Add(this);
					this._PathId = value.PathId;
				}
				else
				{
					this._PathId = default(Nullable<System.Guid>);
				}
				this.SendPropertyChanged("aspnet_Path");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_PersonalizationPerUser", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
	public aspnet_User aspnet_User
	{
		get
		{
			return this._aspnet_User.Entity;
		}
		set
		{
			aspnet_User previousValue = this._aspnet_User.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_User.Entity = null;
					previousValue.aspnet_PersonalizationPerUsers.Remove(this);
				}
				this._aspnet_User.Entity = value;
				if ((value != null))
				{
					value.aspnet_PersonalizationPerUsers.Add(this);
					this._UserId = value.UserId;
				}
				else
				{
					this._UserId = default(Nullable<System.Guid>);
				}
				this.SendPropertyChanged("aspnet_User");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Profile")]
public partial class aspnet_Profile : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _UserId;
	
	private string _PropertyNames;
	
	private string _PropertyValuesString;
	
	private System.Data.Linq.Binary _PropertyValuesBinary;
	
	private System.DateTime _LastUpdatedDate;
	
	private EntityRef<aspnet_User> _aspnet_User;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnPropertyNamesChanging(string value);
    partial void OnPropertyNamesChanged();
    partial void OnPropertyValuesStringChanging(string value);
    partial void OnPropertyValuesStringChanged();
    partial void OnPropertyValuesBinaryChanging(System.Data.Linq.Binary value);
    partial void OnPropertyValuesBinaryChanged();
    partial void OnLastUpdatedDateChanging(System.DateTime value);
    partial void OnLastUpdatedDateChanged();
    #endregion
	
	public aspnet_Profile()
	{
		this._aspnet_User = default(EntityRef<aspnet_User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				if (this._aspnet_User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyNames", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public string PropertyNames
	{
		get
		{
			return this._PropertyNames;
		}
		set
		{
			if ((this._PropertyNames != value))
			{
				this.OnPropertyNamesChanging(value);
				this.SendPropertyChanging();
				this._PropertyNames = value;
				this.SendPropertyChanged("PropertyNames");
				this.OnPropertyNamesChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValuesString", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public string PropertyValuesString
	{
		get
		{
			return this._PropertyValuesString;
		}
		set
		{
			if ((this._PropertyValuesString != value))
			{
				this.OnPropertyValuesStringChanging(value);
				this.SendPropertyChanging();
				this._PropertyValuesString = value;
				this.SendPropertyChanged("PropertyValuesString");
				this.OnPropertyValuesStringChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PropertyValuesBinary", DbType="Image NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public System.Data.Linq.Binary PropertyValuesBinary
	{
		get
		{
			return this._PropertyValuesBinary;
		}
		set
		{
			if ((this._PropertyValuesBinary != value))
			{
				this.OnPropertyValuesBinaryChanging(value);
				this.SendPropertyChanging();
				this._PropertyValuesBinary = value;
				this.SendPropertyChanged("PropertyValuesBinary");
				this.OnPropertyValuesBinaryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedDate", DbType="DateTime NOT NULL")]
	public System.DateTime LastUpdatedDate
	{
		get
		{
			return this._LastUpdatedDate;
		}
		set
		{
			if ((this._LastUpdatedDate != value))
			{
				this.OnLastUpdatedDateChanging(value);
				this.SendPropertyChanging();
				this._LastUpdatedDate = value;
				this.SendPropertyChanged("LastUpdatedDate");
				this.OnLastUpdatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Profile", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
	public aspnet_User aspnet_User
	{
		get
		{
			return this._aspnet_User.Entity;
		}
		set
		{
			aspnet_User previousValue = this._aspnet_User.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_User.Entity = null;
					previousValue.aspnet_Profile = null;
				}
				this._aspnet_User.Entity = value;
				if ((value != null))
				{
					value.aspnet_Profile = this;
					this._UserId = value.UserId;
				}
				else
				{
					this._UserId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_User");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Roles")]
public partial class aspnet_Role : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _ApplicationId;
	
	private System.Guid _RoleId;
	
	private string _RoleName;
	
	private string _LoweredRoleName;
	
	private string _Description;
	
	private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
	
	private EntityRef<aspnet_Application> _aspnet_Application;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnLoweredRoleNameChanging(string value);
    partial void OnLoweredRoleNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
	
	public aspnet_Role()
	{
		this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
		this._aspnet_Application = default(EntityRef<aspnet_Application>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid ApplicationId
	{
		get
		{
			return this._ApplicationId;
		}
		set
		{
			if ((this._ApplicationId != value))
			{
				if (this._aspnet_Application.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnApplicationIdChanging(value);
				this.SendPropertyChanging();
				this._ApplicationId = value;
				this.SendPropertyChanged("ApplicationId");
				this.OnApplicationIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid RoleId
	{
		get
		{
			return this._RoleId;
		}
		set
		{
			if ((this._RoleId != value))
			{
				this.OnRoleIdChanging(value);
				this.SendPropertyChanging();
				this._RoleId = value;
				this.SendPropertyChanged("RoleId");
				this.OnRoleIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string RoleName
	{
		get
		{
			return this._RoleName;
		}
		set
		{
			if ((this._RoleName != value))
			{
				this.OnRoleNameChanging(value);
				this.SendPropertyChanging();
				this._RoleName = value;
				this.SendPropertyChanged("RoleName");
				this.OnRoleNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredRoleName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string LoweredRoleName
	{
		get
		{
			return this._LoweredRoleName;
		}
		set
		{
			if ((this._LoweredRoleName != value))
			{
				this.OnLoweredRoleNameChanging(value);
				this.SendPropertyChanging();
				this._LoweredRoleName = value;
				this.SendPropertyChanged("LoweredRoleName");
				this.OnLoweredRoleNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(256)")]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="RoleId", OtherKey="RoleId")]
	public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
	{
		get
		{
			return this._aspnet_UsersInRoles;
		}
		set
		{
			this._aspnet_UsersInRoles.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_Role", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
	public aspnet_Application aspnet_Application
	{
		get
		{
			return this._aspnet_Application.Entity;
		}
		set
		{
			aspnet_Application previousValue = this._aspnet_Application.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_Application.Entity = null;
					previousValue.aspnet_Roles.Remove(this);
				}
				this._aspnet_Application.Entity = value;
				if ((value != null))
				{
					value.aspnet_Roles.Add(this);
					this._ApplicationId = value.ApplicationId;
				}
				else
				{
					this._ApplicationId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_Application");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Role = this;
	}
	
	private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_Role = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_SchemaVersions")]
public partial class aspnet_SchemaVersion : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Feature;
	
	private string _CompatibleSchemaVersion;
	
	private bool _IsCurrentVersion;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnFeatureChanging(string value);
    partial void OnFeatureChanged();
    partial void OnCompatibleSchemaVersionChanging(string value);
    partial void OnCompatibleSchemaVersionChanged();
    partial void OnIsCurrentVersionChanging(bool value);
    partial void OnIsCurrentVersionChanged();
    #endregion
	
	public aspnet_SchemaVersion()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Feature", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Feature
	{
		get
		{
			return this._Feature;
		}
		set
		{
			if ((this._Feature != value))
			{
				this.OnFeatureChanging(value);
				this.SendPropertyChanging();
				this._Feature = value;
				this.SendPropertyChanged("Feature");
				this.OnFeatureChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompatibleSchemaVersion", DbType="NVarChar(128) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string CompatibleSchemaVersion
	{
		get
		{
			return this._CompatibleSchemaVersion;
		}
		set
		{
			if ((this._CompatibleSchemaVersion != value))
			{
				this.OnCompatibleSchemaVersionChanging(value);
				this.SendPropertyChanging();
				this._CompatibleSchemaVersion = value;
				this.SendPropertyChanged("CompatibleSchemaVersion");
				this.OnCompatibleSchemaVersionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsCurrentVersion", DbType="Bit NOT NULL")]
	public bool IsCurrentVersion
	{
		get
		{
			return this._IsCurrentVersion;
		}
		set
		{
			if ((this._IsCurrentVersion != value))
			{
				this.OnIsCurrentVersionChanging(value);
				this.SendPropertyChanging();
				this._IsCurrentVersion = value;
				this.SendPropertyChanged("IsCurrentVersion");
				this.OnIsCurrentVersionChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_Users")]
public partial class aspnet_User : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _ApplicationId;
	
	private System.Guid _UserId;
	
	private string _UserName;
	
	private string _LoweredUserName;
	
	private string _MobileAlias;
	
	private bool _IsAnonymous;
	
	private System.DateTime _LastActivityDate;
	
	private EntityRef<aspnet_Membership> _aspnet_Membership;
	
	private EntitySet<aspnet_PersonalizationPerUser> _aspnet_PersonalizationPerUsers;
	
	private EntityRef<aspnet_Profile> _aspnet_Profile;
	
	private EntitySet<aspnet_UsersInRole> _aspnet_UsersInRoles;
	
	private EntityRef<aspnet_Application> _aspnet_Application;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnApplicationIdChanging(System.Guid value);
    partial void OnApplicationIdChanged();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnLoweredUserNameChanging(string value);
    partial void OnLoweredUserNameChanged();
    partial void OnMobileAliasChanging(string value);
    partial void OnMobileAliasChanged();
    partial void OnIsAnonymousChanging(bool value);
    partial void OnIsAnonymousChanged();
    partial void OnLastActivityDateChanging(System.DateTime value);
    partial void OnLastActivityDateChanged();
    #endregion
	
	public aspnet_User()
	{
		this._aspnet_Membership = default(EntityRef<aspnet_Membership>);
		this._aspnet_PersonalizationPerUsers = new EntitySet<aspnet_PersonalizationPerUser>(new Action<aspnet_PersonalizationPerUser>(this.attach_aspnet_PersonalizationPerUsers), new Action<aspnet_PersonalizationPerUser>(this.detach_aspnet_PersonalizationPerUsers));
		this._aspnet_Profile = default(EntityRef<aspnet_Profile>);
		this._aspnet_UsersInRoles = new EntitySet<aspnet_UsersInRole>(new Action<aspnet_UsersInRole>(this.attach_aspnet_UsersInRoles), new Action<aspnet_UsersInRole>(this.detach_aspnet_UsersInRoles));
		this._aspnet_Application = default(EntityRef<aspnet_Application>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid ApplicationId
	{
		get
		{
			return this._ApplicationId;
		}
		set
		{
			if ((this._ApplicationId != value))
			{
				if (this._aspnet_Application.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnApplicationIdChanging(value);
				this.SendPropertyChanging();
				this._ApplicationId = value;
				this.SendPropertyChanged("ApplicationId");
				this.OnApplicationIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string UserName
	{
		get
		{
			return this._UserName;
		}
		set
		{
			if ((this._UserName != value))
			{
				this.OnUserNameChanging(value);
				this.SendPropertyChanging();
				this._UserName = value;
				this.SendPropertyChanged("UserName");
				this.OnUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoweredUserName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string LoweredUserName
	{
		get
		{
			return this._LoweredUserName;
		}
		set
		{
			if ((this._LoweredUserName != value))
			{
				this.OnLoweredUserNameChanging(value);
				this.SendPropertyChanging();
				this._LoweredUserName = value;
				this.SendPropertyChanged("LoweredUserName");
				this.OnLoweredUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MobileAlias", DbType="NVarChar(16)")]
	public string MobileAlias
	{
		get
		{
			return this._MobileAlias;
		}
		set
		{
			if ((this._MobileAlias != value))
			{
				this.OnMobileAliasChanging(value);
				this.SendPropertyChanging();
				this._MobileAlias = value;
				this.SendPropertyChanged("MobileAlias");
				this.OnMobileAliasChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsAnonymous", DbType="Bit NOT NULL")]
	public bool IsAnonymous
	{
		get
		{
			return this._IsAnonymous;
		}
		set
		{
			if ((this._IsAnonymous != value))
			{
				this.OnIsAnonymousChanging(value);
				this.SendPropertyChanging();
				this._IsAnonymous = value;
				this.SendPropertyChanged("IsAnonymous");
				this.OnIsAnonymousChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastActivityDate", DbType="DateTime NOT NULL")]
	public System.DateTime LastActivityDate
	{
		get
		{
			return this._LastActivityDate;
		}
		set
		{
			if ((this._LastActivityDate != value))
			{
				this.OnLastActivityDateChanging(value);
				this.SendPropertyChanging();
				this._LastActivityDate = value;
				this.SendPropertyChanged("LastActivityDate");
				this.OnLastActivityDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Membership", Storage="_aspnet_Membership", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
	public aspnet_Membership aspnet_Membership
	{
		get
		{
			return this._aspnet_Membership.Entity;
		}
		set
		{
			aspnet_Membership previousValue = this._aspnet_Membership.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_Membership.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_Membership.Entity = null;
					previousValue.aspnet_User = null;
				}
				this._aspnet_Membership.Entity = value;
				if ((value != null))
				{
					value.aspnet_User = this;
				}
				this.SendPropertyChanged("aspnet_Membership");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_PersonalizationPerUser", Storage="_aspnet_PersonalizationPerUsers", ThisKey="UserId", OtherKey="UserId")]
	public EntitySet<aspnet_PersonalizationPerUser> aspnet_PersonalizationPerUsers
	{
		get
		{
			return this._aspnet_PersonalizationPerUsers;
		}
		set
		{
			this._aspnet_PersonalizationPerUsers.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_Profile", Storage="_aspnet_Profile", ThisKey="UserId", OtherKey="UserId", IsUnique=true, IsForeignKey=false)]
	public aspnet_Profile aspnet_Profile
	{
		get
		{
			return this._aspnet_Profile.Entity;
		}
		set
		{
			aspnet_Profile previousValue = this._aspnet_Profile.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_Profile.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_Profile.Entity = null;
					previousValue.aspnet_User = null;
				}
				this._aspnet_Profile.Entity = value;
				if ((value != null))
				{
					value.aspnet_User = this;
				}
				this.SendPropertyChanged("aspnet_Profile");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_UsersInRoles", ThisKey="UserId", OtherKey="UserId")]
	public EntitySet<aspnet_UsersInRole> aspnet_UsersInRoles
	{
		get
		{
			return this._aspnet_UsersInRoles;
		}
		set
		{
			this._aspnet_UsersInRoles.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Application_aspnet_User", Storage="_aspnet_Application", ThisKey="ApplicationId", OtherKey="ApplicationId", IsForeignKey=true)]
	public aspnet_Application aspnet_Application
	{
		get
		{
			return this._aspnet_Application.Entity;
		}
		set
		{
			aspnet_Application previousValue = this._aspnet_Application.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_Application.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_Application.Entity = null;
					previousValue.aspnet_Users.Remove(this);
				}
				this._aspnet_Application.Entity = value;
				if ((value != null))
				{
					value.aspnet_Users.Add(this);
					this._ApplicationId = value.ApplicationId;
				}
				else
				{
					this._ApplicationId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_Application");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User = this;
	}
	
	private void detach_aspnet_PersonalizationPerUsers(aspnet_PersonalizationPerUser entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User = null;
	}
	
	private void attach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User = this;
	}
	
	private void detach_aspnet_UsersInRoles(aspnet_UsersInRole entity)
	{
		this.SendPropertyChanging();
		entity.aspnet_User = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_UsersInRoles")]
public partial class aspnet_UsersInRole : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _UserId;
	
	private System.Guid _RoleId;
	
	private EntityRef<aspnet_Role> _aspnet_Role;
	
	private EntityRef<aspnet_User> _aspnet_User;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(System.Guid value);
    partial void OnUserIdChanged();
    partial void OnRoleIdChanging(System.Guid value);
    partial void OnRoleIdChanged();
    #endregion
	
	public aspnet_UsersInRole()
	{
		this._aspnet_Role = default(EntityRef<aspnet_Role>);
		this._aspnet_User = default(EntityRef<aspnet_User>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid UserId
	{
		get
		{
			return this._UserId;
		}
		set
		{
			if ((this._UserId != value))
			{
				if (this._aspnet_User.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUserIdChanging(value);
				this.SendPropertyChanging();
				this._UserId = value;
				this.SendPropertyChanged("UserId");
				this.OnUserIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid RoleId
	{
		get
		{
			return this._RoleId;
		}
		set
		{
			if ((this._RoleId != value))
			{
				if (this._aspnet_Role.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnRoleIdChanging(value);
				this.SendPropertyChanging();
				this._RoleId = value;
				this.SendPropertyChanged("RoleId");
				this.OnRoleIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_Role_aspnet_UsersInRole", Storage="_aspnet_Role", ThisKey="RoleId", OtherKey="RoleId", IsForeignKey=true)]
	public aspnet_Role aspnet_Role
	{
		get
		{
			return this._aspnet_Role.Entity;
		}
		set
		{
			aspnet_Role previousValue = this._aspnet_Role.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_Role.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_Role.Entity = null;
					previousValue.aspnet_UsersInRoles.Remove(this);
				}
				this._aspnet_Role.Entity = value;
				if ((value != null))
				{
					value.aspnet_UsersInRoles.Add(this);
					this._RoleId = value.RoleId;
				}
				else
				{
					this._RoleId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_Role");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="aspnet_User_aspnet_UsersInRole", Storage="_aspnet_User", ThisKey="UserId", OtherKey="UserId", IsForeignKey=true)]
	public aspnet_User aspnet_User
	{
		get
		{
			return this._aspnet_User.Entity;
		}
		set
		{
			aspnet_User previousValue = this._aspnet_User.Entity;
			if (((previousValue != value) 
						|| (this._aspnet_User.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._aspnet_User.Entity = null;
					previousValue.aspnet_UsersInRoles.Remove(this);
				}
				this._aspnet_User.Entity = value;
				if ((value != null))
				{
					value.aspnet_UsersInRoles.Add(this);
					this._UserId = value.UserId;
				}
				else
				{
					this._UserId = default(System.Guid);
				}
				this.SendPropertyChanged("aspnet_User");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.aspnet_WebEvent_Events")]
public partial class aspnet_WebEvent_Event : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _EventId;
	
	private System.DateTime _EventTimeUtc;
	
	private System.DateTime _EventTime;
	
	private string _EventType;
	
	private decimal _EventSequence;
	
	private decimal _EventOccurrence;
	
	private int _EventCode;
	
	private int _EventDetailCode;
	
	private string _Message;
	
	private string _ApplicationPath;
	
	private string _ApplicationVirtualPath;
	
	private string _MachineName;
	
	private string _RequestUrl;
	
	private string _ExceptionType;
	
	private string _Details;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnEventIdChanging(string value);
    partial void OnEventIdChanged();
    partial void OnEventTimeUtcChanging(System.DateTime value);
    partial void OnEventTimeUtcChanged();
    partial void OnEventTimeChanging(System.DateTime value);
    partial void OnEventTimeChanged();
    partial void OnEventTypeChanging(string value);
    partial void OnEventTypeChanged();
    partial void OnEventSequenceChanging(decimal value);
    partial void OnEventSequenceChanged();
    partial void OnEventOccurrenceChanging(decimal value);
    partial void OnEventOccurrenceChanged();
    partial void OnEventCodeChanging(int value);
    partial void OnEventCodeChanged();
    partial void OnEventDetailCodeChanging(int value);
    partial void OnEventDetailCodeChanged();
    partial void OnMessageChanging(string value);
    partial void OnMessageChanged();
    partial void OnApplicationPathChanging(string value);
    partial void OnApplicationPathChanged();
    partial void OnApplicationVirtualPathChanging(string value);
    partial void OnApplicationVirtualPathChanged();
    partial void OnMachineNameChanging(string value);
    partial void OnMachineNameChanged();
    partial void OnRequestUrlChanging(string value);
    partial void OnRequestUrlChanged();
    partial void OnExceptionTypeChanging(string value);
    partial void OnExceptionTypeChanged();
    partial void OnDetailsChanging(string value);
    partial void OnDetailsChanged();
    #endregion
	
	public aspnet_WebEvent_Event()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventId", DbType="Char(32) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string EventId
	{
		get
		{
			return this._EventId;
		}
		set
		{
			if ((this._EventId != value))
			{
				this.OnEventIdChanging(value);
				this.SendPropertyChanging();
				this._EventId = value;
				this.SendPropertyChanged("EventId");
				this.OnEventIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTimeUtc", DbType="DateTime NOT NULL")]
	public System.DateTime EventTimeUtc
	{
		get
		{
			return this._EventTimeUtc;
		}
		set
		{
			if ((this._EventTimeUtc != value))
			{
				this.OnEventTimeUtcChanging(value);
				this.SendPropertyChanging();
				this._EventTimeUtc = value;
				this.SendPropertyChanged("EventTimeUtc");
				this.OnEventTimeUtcChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventTime", DbType="DateTime NOT NULL")]
	public System.DateTime EventTime
	{
		get
		{
			return this._EventTime;
		}
		set
		{
			if ((this._EventTime != value))
			{
				this.OnEventTimeChanging(value);
				this.SendPropertyChanging();
				this._EventTime = value;
				this.SendPropertyChanged("EventTime");
				this.OnEventTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventType", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string EventType
	{
		get
		{
			return this._EventType;
		}
		set
		{
			if ((this._EventType != value))
			{
				this.OnEventTypeChanging(value);
				this.SendPropertyChanging();
				this._EventType = value;
				this.SendPropertyChanged("EventType");
				this.OnEventTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventSequence", DbType="Decimal(19,0) NOT NULL")]
	public decimal EventSequence
	{
		get
		{
			return this._EventSequence;
		}
		set
		{
			if ((this._EventSequence != value))
			{
				this.OnEventSequenceChanging(value);
				this.SendPropertyChanging();
				this._EventSequence = value;
				this.SendPropertyChanged("EventSequence");
				this.OnEventSequenceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventOccurrence", DbType="Decimal(19,0) NOT NULL")]
	public decimal EventOccurrence
	{
		get
		{
			return this._EventOccurrence;
		}
		set
		{
			if ((this._EventOccurrence != value))
			{
				this.OnEventOccurrenceChanging(value);
				this.SendPropertyChanging();
				this._EventOccurrence = value;
				this.SendPropertyChanged("EventOccurrence");
				this.OnEventOccurrenceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventCode", DbType="Int NOT NULL")]
	public int EventCode
	{
		get
		{
			return this._EventCode;
		}
		set
		{
			if ((this._EventCode != value))
			{
				this.OnEventCodeChanging(value);
				this.SendPropertyChanging();
				this._EventCode = value;
				this.SendPropertyChanged("EventCode");
				this.OnEventCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EventDetailCode", DbType="Int NOT NULL")]
	public int EventDetailCode
	{
		get
		{
			return this._EventDetailCode;
		}
		set
		{
			if ((this._EventDetailCode != value))
			{
				this.OnEventDetailCodeChanging(value);
				this.SendPropertyChanging();
				this._EventDetailCode = value;
				this.SendPropertyChanged("EventDetailCode");
				this.OnEventDetailCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Message", DbType="NVarChar(1024)")]
	public string Message
	{
		get
		{
			return this._Message;
		}
		set
		{
			if ((this._Message != value))
			{
				this.OnMessageChanging(value);
				this.SendPropertyChanging();
				this._Message = value;
				this.SendPropertyChanged("Message");
				this.OnMessageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationPath", DbType="NVarChar(256)")]
	public string ApplicationPath
	{
		get
		{
			return this._ApplicationPath;
		}
		set
		{
			if ((this._ApplicationPath != value))
			{
				this.OnApplicationPathChanging(value);
				this.SendPropertyChanging();
				this._ApplicationPath = value;
				this.SendPropertyChanged("ApplicationPath");
				this.OnApplicationPathChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApplicationVirtualPath", DbType="NVarChar(256)")]
	public string ApplicationVirtualPath
	{
		get
		{
			return this._ApplicationVirtualPath;
		}
		set
		{
			if ((this._ApplicationVirtualPath != value))
			{
				this.OnApplicationVirtualPathChanging(value);
				this.SendPropertyChanging();
				this._ApplicationVirtualPath = value;
				this.SendPropertyChanged("ApplicationVirtualPath");
				this.OnApplicationVirtualPathChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MachineName", DbType="NVarChar(256) NOT NULL", CanBeNull=false)]
	public string MachineName
	{
		get
		{
			return this._MachineName;
		}
		set
		{
			if ((this._MachineName != value))
			{
				this.OnMachineNameChanging(value);
				this.SendPropertyChanging();
				this._MachineName = value;
				this.SendPropertyChanged("MachineName");
				this.OnMachineNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RequestUrl", DbType="NVarChar(1024)")]
	public string RequestUrl
	{
		get
		{
			return this._RequestUrl;
		}
		set
		{
			if ((this._RequestUrl != value))
			{
				this.OnRequestUrlChanging(value);
				this.SendPropertyChanging();
				this._RequestUrl = value;
				this.SendPropertyChanged("RequestUrl");
				this.OnRequestUrlChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExceptionType", DbType="NVarChar(256)")]
	public string ExceptionType
	{
		get
		{
			return this._ExceptionType;
		}
		set
		{
			if ((this._ExceptionType != value))
			{
				this.OnExceptionTypeChanging(value);
				this.SendPropertyChanging();
				this._ExceptionType = value;
				this.SendPropertyChanged("ExceptionType");
				this.OnExceptionTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Details", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Details
	{
		get
		{
			return this._Details;
		}
		set
		{
			if ((this._Details != value))
			{
				this.OnDetailsChanging(value);
				this.SendPropertyChanging();
				this._Details = value;
				this.SendPropertyChanged("Details");
				this.OnDetailsChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Years")]
public partial class Year : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Year1;
	
	private EntitySet<Student> _Students;
	
	private EntitySet<announcement> _announcements;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnYear1Changing(int value);
    partial void OnYear1Changed();
    #endregion
	
	public Year()
	{
		this._Students = new EntitySet<Student>(new Action<Student>(this.attach_Students), new Action<Student>(this.detach_Students));
		this._announcements = new EntitySet<announcement>(new Action<announcement>(this.attach_announcements), new Action<announcement>(this.detach_announcements));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Year", Storage="_Year1", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Year1
	{
		get
		{
			return this._Year1;
		}
		set
		{
			if ((this._Year1 != value))
			{
				this.OnYear1Changing(value);
				this.SendPropertyChanging();
				this._Year1 = value;
				this.SendPropertyChanged("Year1");
				this.OnYear1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Year_Student", Storage="_Students", ThisKey="Year1", OtherKey="Year")]
	public EntitySet<Student> Students
	{
		get
		{
			return this._Students;
		}
		set
		{
			this._Students.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Year_announcement", Storage="_announcements", ThisKey="Year1", OtherKey="to")]
	public EntitySet<announcement> announcements
	{
		get
		{
			return this._announcements;
		}
		set
		{
			this._announcements.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Students(Student entity)
	{
		this.SendPropertyChanging();
		entity.Year1 = this;
	}
	
	private void detach_Students(Student entity)
	{
		this.SendPropertyChanging();
		entity.Year1 = null;
	}
	
	private void attach_announcements(announcement entity)
	{
		this.SendPropertyChanging();
		entity.Year = this;
	}
	
	private void detach_announcements(announcement entity)
	{
		this.SendPropertyChanging();
		entity.Year = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Courses")]
public partial class Course : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Course1;
	
	private EntitySet<Student> _Students;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCourse1Changing(string value);
    partial void OnCourse1Changed();
    #endregion
	
	public Course()
	{
		this._Students = new EntitySet<Student>(new Action<Student>(this.attach_Students), new Action<Student>(this.detach_Students));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Course", Storage="_Course1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Course1
	{
		get
		{
			return this._Course1;
		}
		set
		{
			if ((this._Course1 != value))
			{
				this.OnCourse1Changing(value);
				this.SendPropertyChanging();
				this._Course1 = value;
				this.SendPropertyChanged("Course1");
				this.OnCourse1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_Student", Storage="_Students", ThisKey="ID", OtherKey="Course")]
	public EntitySet<Student> Students
	{
		get
		{
			return this._Students;
		}
		set
		{
			this._Students.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Students(Student entity)
	{
		this.SendPropertyChanging();
		entity.Course1 = this;
	}
	
	private void detach_Students(Student entity)
	{
		this.SendPropertyChanging();
		entity.Course1 = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Departments")]
public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Department1;
	
	private EntitySet<Student> _Students;
	
	private EntitySet<Coordinator> _Coordinators;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDepartment1Changing(string value);
    partial void OnDepartment1Changed();
    #endregion
	
	public Department()
	{
		this._Students = new EntitySet<Student>(new Action<Student>(this.attach_Students), new Action<Student>(this.detach_Students));
		this._Coordinators = new EntitySet<Coordinator>(new Action<Coordinator>(this.attach_Coordinators), new Action<Coordinator>(this.detach_Coordinators));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Department", Storage="_Department1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Department1
	{
		get
		{
			return this._Department1;
		}
		set
		{
			if ((this._Department1 != value))
			{
				this.OnDepartment1Changing(value);
				this.SendPropertyChanging();
				this._Department1 = value;
				this.SendPropertyChanged("Department1");
				this.OnDepartment1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Student", Storage="_Students", ThisKey="ID", OtherKey="Department")]
	public EntitySet<Student> Students
	{
		get
		{
			return this._Students;
		}
		set
		{
			this._Students.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Coordinator", Storage="_Coordinators", ThisKey="ID", OtherKey="Dept")]
	public EntitySet<Coordinator> Coordinators
	{
		get
		{
			return this._Coordinators;
		}
		set
		{
			this._Coordinators.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Students(Student entity)
	{
		this.SendPropertyChanging();
		entity.Department1 = this;
	}
	
	private void detach_Students(Student entity)
	{
		this.SendPropertyChanging();
		entity.Department1 = null;
	}
	
	private void attach_Coordinators(Coordinator entity)
	{
		this.SendPropertyChanging();
		entity.Department = this;
	}
	
	private void detach_Coordinators(Coordinator entity)
	{
		this.SendPropertyChanging();
		entity.Department = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Placements")]
public partial class Placement : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private long _ID;
	
	private string _Student_ID;
	
	private int _Placed_In;
	
	private EntityRef<Company> _Company;
	
	private EntityRef<Student> _Student;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnStudent_IDChanging(string value);
    partial void OnStudent_IDChanged();
    partial void OnPlaced_InChanging(int value);
    partial void OnPlaced_InChanged();
    #endregion
	
	public Placement()
	{
		this._Company = default(EntityRef<Company>);
		this._Student = default(EntityRef<Student>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public long ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_ID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Student_ID
	{
		get
		{
			return this._Student_ID;
		}
		set
		{
			if ((this._Student_ID != value))
			{
				if (this._Student.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnStudent_IDChanging(value);
				this.SendPropertyChanging();
				this._Student_ID = value;
				this.SendPropertyChanged("Student_ID");
				this.OnStudent_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Placed_In", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int Placed_In
	{
		get
		{
			return this._Placed_In;
		}
		set
		{
			if ((this._Placed_In != value))
			{
				if (this._Company.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnPlaced_InChanging(value);
				this.SendPropertyChanging();
				this._Placed_In = value;
				this.SendPropertyChanged("Placed_In");
				this.OnPlaced_InChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Placement", Storage="_Company", ThisKey="Placed_In", OtherKey="ID", IsForeignKey=true)]
	public Company Company
	{
		get
		{
			return this._Company.Entity;
		}
		set
		{
			Company previousValue = this._Company.Entity;
			if (((previousValue != value) 
						|| (this._Company.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Company.Entity = null;
					previousValue.Placements.Remove(this);
				}
				this._Company.Entity = value;
				if ((value != null))
				{
					value.Placements.Add(this);
					this._Placed_In = value.ID;
				}
				else
				{
					this._Placed_In = default(int);
				}
				this.SendPropertyChanged("Company");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Placement", Storage="_Student", ThisKey="Student_ID", OtherKey="Student_ID", IsForeignKey=true)]
	public Student Student
	{
		get
		{
			return this._Student.Entity;
		}
		set
		{
			Student previousValue = this._Student.Entity;
			if (((previousValue != value) 
						|| (this._Student.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Student.Entity = null;
					previousValue.Placements.Remove(this);
				}
				this._Student.Entity = value;
				if ((value != null))
				{
					value.Placements.Add(this);
					this._Student_ID = value.Student_ID;
				}
				else
				{
					this._Student_ID = default(string);
				}
				this.SendPropertyChanged("Student");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Companies")]
public partial class Company : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Company_Name;
	
	private string _Address;
	
	private string _Other;
	
	private EntitySet<Placement> _Placements;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCompany_NameChanging(string value);
    partial void OnCompany_NameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnOtherChanging(string value);
    partial void OnOtherChanged();
    #endregion
	
	public Company()
	{
		this._Placements = new EntitySet<Placement>(new Action<Placement>(this.attach_Placements), new Action<Placement>(this.detach_Placements));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Company_Name", DbType="VarChar(100)")]
	public string Company_Name
	{
		get
		{
			return this._Company_Name;
		}
		set
		{
			if ((this._Company_Name != value))
			{
				this.OnCompany_NameChanging(value);
				this.SendPropertyChanging();
				this._Company_Name = value;
				this.SendPropertyChanged("Company_Name");
				this.OnCompany_NameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Address
	{
		get
		{
			return this._Address;
		}
		set
		{
			if ((this._Address != value))
			{
				this.OnAddressChanging(value);
				this.SendPropertyChanging();
				this._Address = value;
				this.SendPropertyChanged("Address");
				this.OnAddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Other", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Other
	{
		get
		{
			return this._Other;
		}
		set
		{
			if ((this._Other != value))
			{
				this.OnOtherChanging(value);
				this.SendPropertyChanging();
				this._Other = value;
				this.SendPropertyChanged("Other");
				this.OnOtherChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Placement", Storage="_Placements", ThisKey="ID", OtherKey="Placed_In")]
	public EntitySet<Placement> Placements
	{
		get
		{
			return this._Placements;
		}
		set
		{
			this._Placements.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Placements(Placement entity)
	{
		this.SendPropertyChanging();
		entity.Company = this;
	}
	
	private void detach_Placements(Placement entity)
	{
		this.SendPropertyChanging();
		entity.Company = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.private_messaging")]
public partial class private_messaging : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _MessageID;
	
	private string _From;
	
	private string _To;
	
	private string _Subject;
	
	private string _Body;
	
	private System.Nullable<System.DateTime> _Received;
	
	private System.Nullable<bool> _Status;
	
	private string _Folder;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMessageIDChanging(int value);
    partial void OnMessageIDChanged();
    partial void OnFromChanging(string value);
    partial void OnFromChanged();
    partial void OnToChanging(string value);
    partial void OnToChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnBodyChanging(string value);
    partial void OnBodyChanged();
    partial void OnReceivedChanging(System.Nullable<System.DateTime> value);
    partial void OnReceivedChanged();
    partial void OnStatusChanging(System.Nullable<bool> value);
    partial void OnStatusChanged();
    partial void OnFolderChanging(string value);
    partial void OnFolderChanged();
    #endregion
	
	public private_messaging()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MessageID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int MessageID
	{
		get
		{
			return this._MessageID;
		}
		set
		{
			if ((this._MessageID != value))
			{
				this.OnMessageIDChanging(value);
				this.SendPropertyChanging();
				this._MessageID = value;
				this.SendPropertyChanged("MessageID");
				this.OnMessageIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[From]", Storage="_From", DbType="VarChar(45)")]
	public string From
	{
		get
		{
			return this._From;
		}
		set
		{
			if ((this._From != value))
			{
				this.OnFromChanging(value);
				this.SendPropertyChanging();
				this._From = value;
				this.SendPropertyChanged("From");
				this.OnFromChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[To]", Storage="_To", DbType="VarChar(45)")]
	public string To
	{
		get
		{
			return this._To;
		}
		set
		{
			if ((this._To != value))
			{
				this.OnToChanging(value);
				this.SendPropertyChanging();
				this._To = value;
				this.SendPropertyChanged("To");
				this.OnToChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="VarChar(200)")]
	public string Subject
	{
		get
		{
			return this._Subject;
		}
		set
		{
			if ((this._Subject != value))
			{
				this.OnSubjectChanging(value);
				this.SendPropertyChanging();
				this._Subject = value;
				this.SendPropertyChanged("Subject");
				this.OnSubjectChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Body", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Body
	{
		get
		{
			return this._Body;
		}
		set
		{
			if ((this._Body != value))
			{
				this.OnBodyChanging(value);
				this.SendPropertyChanging();
				this._Body = value;
				this.SendPropertyChanged("Body");
				this.OnBodyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Received", DbType="DateTime")]
	public System.Nullable<System.DateTime> Received
	{
		get
		{
			return this._Received;
		}
		set
		{
			if ((this._Received != value))
			{
				this.OnReceivedChanging(value);
				this.SendPropertyChanging();
				this._Received = value;
				this.SendPropertyChanged("Received");
				this.OnReceivedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit")]
	public System.Nullable<bool> Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this.OnStatusChanging(value);
				this.SendPropertyChanging();
				this._Status = value;
				this.SendPropertyChanged("Status");
				this.OnStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Folder", DbType="NVarChar(256)")]
	public string Folder
	{
		get
		{
			return this._Folder;
		}
		set
		{
			if ((this._Folder != value))
			{
				this.OnFolderChanging(value);
				this.SendPropertyChanging();
				this._Folder = value;
				this.SendPropertyChanged("Folder");
				this.OnFolderChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Students")]
public partial class Student : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Student_ID;
	
	private int _Course;
	
	private int _Department;
	
	private int _Year;
	
	private System.Nullable<int> _Year_of_Joining;
	
	private string _Email;
	
	private string _Password;
	
	private string _First_Name;
	
	private string _Last_Name;
	
	private string _Current_Address;
	
	private string _Per_Address;
	
	private string _Mobile_Number;
	
	private string _Land_Line;
	
	private System.Nullable<double> _tenth;
	
	private System.Nullable<double> _Inter;
	
	private System.Nullable<double> _Eamcet_Rank;
	
	private System.Nullable<double> _Sem1;
	
	private System.Nullable<double> _Sem2;
	
	private System.Nullable<double> _Sem3;
	
	private System.Nullable<double> _Sem4;
	
	private System.Nullable<double> _Sem5;
	
	private System.Nullable<double> _Sem6;
	
	private System.Nullable<double> _Sem7;
	
	private System.Nullable<double> _Sem8;
	
	private System.Nullable<int> _Sem1_backlogs;
	
	private System.Nullable<int> _Sem2_backlogs;
	
	private System.Nullable<int> _Sem3_backlogs;
	
	private System.Nullable<int> _Sem4_backlogs;
	
	private System.Nullable<int> _Sem5_backlogs;
	
	private System.Nullable<int> _Sem6_backlogs;
	
	private System.Nullable<int> _Sem7_backlogs;
	
	private System.Nullable<int> _Sem8_backlogs;
	
	private string _img_url;
	
	private string _achivements;
	
	private string _Remarks;
	
	private System.Nullable<bool> _Gender;
	
	private System.Nullable<double> _Overall;
	
	private System.Nullable<int> _total_baklogs;
	
	private bool _Checked;
	
	private System.DateTime _TimeStamp;
	
	private EntitySet<Placement> _Placements;
	
	private EntityRef<Course> _Course1;
	
	private EntityRef<Department> _Department1;
	
	private EntityRef<Year> _Year1;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStudent_IDChanging(string value);
    partial void OnStudent_IDChanged();
    partial void OnCourseChanging(int value);
    partial void OnCourseChanged();
    partial void OnDepartmentChanging(int value);
    partial void OnDepartmentChanged();
    partial void OnYearChanging(int value);
    partial void OnYearChanged();
    partial void OnYear_of_JoiningChanging(System.Nullable<int> value);
    partial void OnYear_of_JoiningChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnFirst_NameChanging(string value);
    partial void OnFirst_NameChanged();
    partial void OnLast_NameChanging(string value);
    partial void OnLast_NameChanged();
    partial void OnCurrent_AddressChanging(string value);
    partial void OnCurrent_AddressChanged();
    partial void OnPer_AddressChanging(string value);
    partial void OnPer_AddressChanged();
    partial void OnMobile_NumberChanging(string value);
    partial void OnMobile_NumberChanged();
    partial void OnLand_LineChanging(string value);
    partial void OnLand_LineChanged();
    partial void OntenthChanging(System.Nullable<double> value);
    partial void OntenthChanged();
    partial void OnInterChanging(System.Nullable<double> value);
    partial void OnInterChanged();
    partial void OnEamcet_RankChanging(System.Nullable<double> value);
    partial void OnEamcet_RankChanged();
    partial void OnSem1Changing(System.Nullable<double> value);
    partial void OnSem1Changed();
    partial void OnSem2Changing(System.Nullable<double> value);
    partial void OnSem2Changed();
    partial void OnSem3Changing(System.Nullable<double> value);
    partial void OnSem3Changed();
    partial void OnSem4Changing(System.Nullable<double> value);
    partial void OnSem4Changed();
    partial void OnSem5Changing(System.Nullable<double> value);
    partial void OnSem5Changed();
    partial void OnSem6Changing(System.Nullable<double> value);
    partial void OnSem6Changed();
    partial void OnSem7Changing(System.Nullable<double> value);
    partial void OnSem7Changed();
    partial void OnSem8Changing(System.Nullable<double> value);
    partial void OnSem8Changed();
    partial void OnSem1_backlogsChanging(System.Nullable<int> value);
    partial void OnSem1_backlogsChanged();
    partial void OnSem2_backlogsChanging(System.Nullable<int> value);
    partial void OnSem2_backlogsChanged();
    partial void OnSem3_backlogsChanging(System.Nullable<int> value);
    partial void OnSem3_backlogsChanged();
    partial void OnSem4_backlogsChanging(System.Nullable<int> value);
    partial void OnSem4_backlogsChanged();
    partial void OnSem5_backlogsChanging(System.Nullable<int> value);
    partial void OnSem5_backlogsChanged();
    partial void OnSem6_backlogsChanging(System.Nullable<int> value);
    partial void OnSem6_backlogsChanged();
    partial void OnSem7_backlogsChanging(System.Nullable<int> value);
    partial void OnSem7_backlogsChanged();
    partial void OnSem8_backlogsChanging(System.Nullable<int> value);
    partial void OnSem8_backlogsChanged();
    partial void Onimg_urlChanging(string value);
    partial void Onimg_urlChanged();
    partial void OnachivementsChanging(string value);
    partial void OnachivementsChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnGenderChanging(System.Nullable<bool> value);
    partial void OnGenderChanged();
    partial void OnOverallChanging(System.Nullable<double> value);
    partial void OnOverallChanged();
    partial void Ontotal_baklogsChanging(System.Nullable<int> value);
    partial void Ontotal_baklogsChanged();
    partial void OnCheckedChanging(bool value);
    partial void OnCheckedChanged();
    partial void OnTimeStampChanging(System.DateTime value);
    partial void OnTimeStampChanged();
    #endregion
	
	public Student()
	{
		this._Placements = new EntitySet<Placement>(new Action<Placement>(this.attach_Placements), new Action<Placement>(this.detach_Placements));
		this._Course1 = default(EntityRef<Course>);
		this._Department1 = default(EntityRef<Department>);
		this._Year1 = default(EntityRef<Year>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Student_ID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Student_ID
	{
		get
		{
			return this._Student_ID;
		}
		set
		{
			if ((this._Student_ID != value))
			{
				this.OnStudent_IDChanging(value);
				this.SendPropertyChanging();
				this._Student_ID = value;
				this.SendPropertyChanged("Student_ID");
				this.OnStudent_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course", DbType="Int NOT NULL")]
	public int Course
	{
		get
		{
			return this._Course;
		}
		set
		{
			if ((this._Course != value))
			{
				if (this._Course1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCourseChanging(value);
				this.SendPropertyChanging();
				this._Course = value;
				this.SendPropertyChanged("Course");
				this.OnCourseChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="Int NOT NULL")]
	public int Department
	{
		get
		{
			return this._Department;
		}
		set
		{
			if ((this._Department != value))
			{
				if (this._Department1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnDepartmentChanging(value);
				this.SendPropertyChanging();
				this._Department = value;
				this.SendPropertyChanged("Department");
				this.OnDepartmentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="Int NOT NULL")]
	public int Year
	{
		get
		{
			return this._Year;
		}
		set
		{
			if ((this._Year != value))
			{
				if (this._Year1.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnYearChanging(value);
				this.SendPropertyChanging();
				this._Year = value;
				this.SendPropertyChanged("Year");
				this.OnYearChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year_of_Joining", DbType="Int")]
	public System.Nullable<int> Year_of_Joining
	{
		get
		{
			return this._Year_of_Joining;
		}
		set
		{
			if ((this._Year_of_Joining != value))
			{
				this.OnYear_of_JoiningChanging(value);
				this.SendPropertyChanging();
				this._Year_of_Joining = value;
				this.SendPropertyChanged("Year_of_Joining");
				this.OnYear_of_JoiningChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(200)")]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_First_Name", DbType="VarChar(50)")]
	public string First_Name
	{
		get
		{
			return this._First_Name;
		}
		set
		{
			if ((this._First_Name != value))
			{
				this.OnFirst_NameChanging(value);
				this.SendPropertyChanging();
				this._First_Name = value;
				this.SendPropertyChanged("First_Name");
				this.OnFirst_NameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Last_Name", DbType="VarChar(50)")]
	public string Last_Name
	{
		get
		{
			return this._Last_Name;
		}
		set
		{
			if ((this._Last_Name != value))
			{
				this.OnLast_NameChanging(value);
				this.SendPropertyChanging();
				this._Last_Name = value;
				this.SendPropertyChanged("Last_Name");
				this.OnLast_NameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Current_Address", DbType="VarChar(200)")]
	public string Current_Address
	{
		get
		{
			return this._Current_Address;
		}
		set
		{
			if ((this._Current_Address != value))
			{
				this.OnCurrent_AddressChanging(value);
				this.SendPropertyChanging();
				this._Current_Address = value;
				this.SendPropertyChanged("Current_Address");
				this.OnCurrent_AddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Per_Address", DbType="VarChar(200)")]
	public string Per_Address
	{
		get
		{
			return this._Per_Address;
		}
		set
		{
			if ((this._Per_Address != value))
			{
				this.OnPer_AddressChanging(value);
				this.SendPropertyChanging();
				this._Per_Address = value;
				this.SendPropertyChanged("Per_Address");
				this.OnPer_AddressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile_Number", DbType="VarChar(15)")]
	public string Mobile_Number
	{
		get
		{
			return this._Mobile_Number;
		}
		set
		{
			if ((this._Mobile_Number != value))
			{
				this.OnMobile_NumberChanging(value);
				this.SendPropertyChanging();
				this._Mobile_Number = value;
				this.SendPropertyChanged("Mobile_Number");
				this.OnMobile_NumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Land_Line", DbType="VarChar(15)")]
	public string Land_Line
	{
		get
		{
			return this._Land_Line;
		}
		set
		{
			if ((this._Land_Line != value))
			{
				this.OnLand_LineChanging(value);
				this.SendPropertyChanging();
				this._Land_Line = value;
				this.SendPropertyChanged("Land_Line");
				this.OnLand_LineChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tenth", DbType="Float")]
	public System.Nullable<double> tenth
	{
		get
		{
			return this._tenth;
		}
		set
		{
			if ((this._tenth != value))
			{
				this.OntenthChanging(value);
				this.SendPropertyChanging();
				this._tenth = value;
				this.SendPropertyChanged("tenth");
				this.OntenthChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Inter", DbType="Float")]
	public System.Nullable<double> Inter
	{
		get
		{
			return this._Inter;
		}
		set
		{
			if ((this._Inter != value))
			{
				this.OnInterChanging(value);
				this.SendPropertyChanging();
				this._Inter = value;
				this.SendPropertyChanged("Inter");
				this.OnInterChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Eamcet_Rank", DbType="Float")]
	public System.Nullable<double> Eamcet_Rank
	{
		get
		{
			return this._Eamcet_Rank;
		}
		set
		{
			if ((this._Eamcet_Rank != value))
			{
				this.OnEamcet_RankChanging(value);
				this.SendPropertyChanging();
				this._Eamcet_Rank = value;
				this.SendPropertyChanged("Eamcet_Rank");
				this.OnEamcet_RankChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sem1", DbType="Float")]
	public System.Nullable<double> Sem1
	{
		get
		{
			return this._Sem1;
		}
		set
		{
			if ((this._Sem1 != value))
			{
				this.OnSem1Changing(value);
				this.SendPropertyChanging();
				this._Sem1 = value;
				this.SendPropertyChanged("Sem1");
				this.OnSem1Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sem2", DbType="Float")]
	public System.Nullable<double> Sem2
	{
		get
		{
			return this._Sem2;
		}
		set
		{
			if ((this._Sem2 != value))
			{
				this.OnSem2Changing(value);
				this.SendPropertyChanging();
				this._Sem2 = value;
				this.SendPropertyChanged("Sem2");
				this.OnSem2Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sem3", DbType="Float")]
	public System.Nullable<double> Sem3
	{
		get
		{
			return this._Sem3;
		}
		set
		{
			if ((this._Sem3 != value))
			{
				this.OnSem3Changing(value);
				this.SendPropertyChanging();
				this._Sem3 = value;
				this.SendPropertyChanged("Sem3");
				this.OnSem3Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sem4", DbType="Float")]
	public System.Nullable<double> Sem4
	{
		get
		{
			return this._Sem4;
		}
		set
		{
			if ((this._Sem4 != value))
			{
				this.OnSem4Changing(value);
				this.SendPropertyChanging();
				this._Sem4 = value;
				this.SendPropertyChanged("Sem4");
				this.OnSem4Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sem5", DbType="Float")]
	public System.Nullable<double> Sem5
	{
		get
		{
			return this._Sem5;
		}
		set
		{
			if ((this._Sem5 != value))
			{
				this.OnSem5Changing(value);
				this.SendPropertyChanging();
				this._Sem5 = value;
				this.SendPropertyChanged("Sem5");
				this.OnSem5Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sem6", DbType="Float")]
	public System.Nullable<double> Sem6
	{
		get
		{
			return this._Sem6;
		}
		set
		{
			if ((this._Sem6 != value))
			{
				this.OnSem6Changing(value);
				this.SendPropertyChanging();
				this._Sem6 = value;
				this.SendPropertyChanged("Sem6");
				this.OnSem6Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sem7", DbType="Float")]
	public System.Nullable<double> Sem7
	{
		get
		{
			return this._Sem7;
		}
		set
		{
			if ((this._Sem7 != value))
			{
				this.OnSem7Changing(value);
				this.SendPropertyChanging();
				this._Sem7 = value;
				this.SendPropertyChanged("Sem7");
				this.OnSem7Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sem8", DbType="Float")]
	public System.Nullable<double> Sem8
	{
		get
		{
			return this._Sem8;
		}
		set
		{
			if ((this._Sem8 != value))
			{
				this.OnSem8Changing(value);
				this.SendPropertyChanging();
				this._Sem8 = value;
				this.SendPropertyChanged("Sem8");
				this.OnSem8Changed();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sem1_backlogs", DbType="Int")]
	public System.Nullable<int> Sem1_backlogs
	{
		get
		{
			return this._Sem1_backlogs;
		}
		set
		{
			if ((this._Sem1_backlogs != value))
			{
				this.OnSem1_backlogsChanging(value);
				this.SendPropertyChanging();
				this._Sem1_backlogs = value;
				this.SendPropertyChanged("Sem1_backlogs");
				this.OnSem1_backlogsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sem2_backlogs", DbType="Int")]
	public System.Nullable<int> Sem2_backlogs
	{
		get
		{
			return this._Sem2_backlogs;
		}
		set
		{
			if ((this._Sem2_backlogs != value))
			{
				this.OnSem2_backlogsChanging(value);
				this.SendPropertyChanging();
				this._Sem2_backlogs = value;
				this.SendPropertyChanged("Sem2_backlogs");
				this.OnSem2_backlogsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sem3_backlogs", DbType="Int")]
	public System.Nullable<int> Sem3_backlogs
	{
		get
		{
			return this._Sem3_backlogs;
		}
		set
		{
			if ((this._Sem3_backlogs != value))
			{
				this.OnSem3_backlogsChanging(value);
				this.SendPropertyChanging();
				this._Sem3_backlogs = value;
				this.SendPropertyChanged("Sem3_backlogs");
				this.OnSem3_backlogsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sem4_backlogs", DbType="Int")]
	public System.Nullable<int> Sem4_backlogs
	{
		get
		{
			return this._Sem4_backlogs;
		}
		set
		{
			if ((this._Sem4_backlogs != value))
			{
				this.OnSem4_backlogsChanging(value);
				this.SendPropertyChanging();
				this._Sem4_backlogs = value;
				this.SendPropertyChanged("Sem4_backlogs");
				this.OnSem4_backlogsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sem5_backlogs", DbType="Int")]
	public System.Nullable<int> Sem5_backlogs
	{
		get
		{
			return this._Sem5_backlogs;
		}
		set
		{
			if ((this._Sem5_backlogs != value))
			{
				this.OnSem5_backlogsChanging(value);
				this.SendPropertyChanging();
				this._Sem5_backlogs = value;
				this.SendPropertyChanged("Sem5_backlogs");
				this.OnSem5_backlogsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sem6_backlogs", DbType="Int")]
	public System.Nullable<int> Sem6_backlogs
	{
		get
		{
			return this._Sem6_backlogs;
		}
		set
		{
			if ((this._Sem6_backlogs != value))
			{
				this.OnSem6_backlogsChanging(value);
				this.SendPropertyChanging();
				this._Sem6_backlogs = value;
				this.SendPropertyChanged("Sem6_backlogs");
				this.OnSem6_backlogsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sem7_backlogs", DbType="Int")]
	public System.Nullable<int> Sem7_backlogs
	{
		get
		{
			return this._Sem7_backlogs;
		}
		set
		{
			if ((this._Sem7_backlogs != value))
			{
				this.OnSem7_backlogsChanging(value);
				this.SendPropertyChanging();
				this._Sem7_backlogs = value;
				this.SendPropertyChanged("Sem7_backlogs");
				this.OnSem7_backlogsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sem8_backlogs", DbType="Int")]
	public System.Nullable<int> Sem8_backlogs
	{
		get
		{
			return this._Sem8_backlogs;
		}
		set
		{
			if ((this._Sem8_backlogs != value))
			{
				this.OnSem8_backlogsChanging(value);
				this.SendPropertyChanging();
				this._Sem8_backlogs = value;
				this.SendPropertyChanged("Sem8_backlogs");
				this.OnSem8_backlogsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_img_url", DbType="VarChar(200)")]
	public string img_url
	{
		get
		{
			return this._img_url;
		}
		set
		{
			if ((this._img_url != value))
			{
				this.Onimg_urlChanging(value);
				this.SendPropertyChanging();
				this._img_url = value;
				this.SendPropertyChanged("img_url");
				this.Onimg_urlChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_achivements", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string achivements
	{
		get
		{
			return this._achivements;
		}
		set
		{
			if ((this._achivements != value))
			{
				this.OnachivementsChanging(value);
				this.SendPropertyChanging();
				this._achivements = value;
				this.SendPropertyChanged("achivements");
				this.OnachivementsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remarks", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string Remarks
	{
		get
		{
			return this._Remarks;
		}
		set
		{
			if ((this._Remarks != value))
			{
				this.OnRemarksChanging(value);
				this.SendPropertyChanging();
				this._Remarks = value;
				this.SendPropertyChanged("Remarks");
				this.OnRemarksChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Bit")]
	public System.Nullable<bool> Gender
	{
		get
		{
			return this._Gender;
		}
		set
		{
			if ((this._Gender != value))
			{
				this.OnGenderChanging(value);
				this.SendPropertyChanging();
				this._Gender = value;
				this.SendPropertyChanged("Gender");
				this.OnGenderChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Overall", DbType="Float")]
	public System.Nullable<double> Overall
	{
		get
		{
			return this._Overall;
		}
		set
		{
			if ((this._Overall != value))
			{
				this.OnOverallChanging(value);
				this.SendPropertyChanging();
				this._Overall = value;
				this.SendPropertyChanged("Overall");
				this.OnOverallChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_baklogs", DbType="Int")]
	public System.Nullable<int> total_baklogs
	{
		get
		{
			return this._total_baklogs;
		}
		set
		{
			if ((this._total_baklogs != value))
			{
				this.Ontotal_baklogsChanging(value);
				this.SendPropertyChanging();
				this._total_baklogs = value;
				this.SendPropertyChanged("total_baklogs");
				this.Ontotal_baklogsChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Checked", DbType="Bit NOT NULL")]
	public bool Checked
	{
		get
		{
			return this._Checked;
		}
		set
		{
			if ((this._Checked != value))
			{
				this.OnCheckedChanging(value);
				this.SendPropertyChanging();
				this._Checked = value;
				this.SendPropertyChanged("Checked");
				this.OnCheckedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeStamp", DbType="DateTime NOT NULL")]
	public System.DateTime TimeStamp
	{
		get
		{
			return this._TimeStamp;
		}
		set
		{
			if ((this._TimeStamp != value))
			{
				this.OnTimeStampChanging(value);
				this.SendPropertyChanging();
				this._TimeStamp = value;
				this.SendPropertyChanged("TimeStamp");
				this.OnTimeStampChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Student_Placement", Storage="_Placements", ThisKey="Student_ID", OtherKey="Student_ID")]
	public EntitySet<Placement> Placements
	{
		get
		{
			return this._Placements;
		}
		set
		{
			this._Placements.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Course_Student", Storage="_Course1", ThisKey="Course", OtherKey="ID", IsForeignKey=true)]
	public Course Course1
	{
		get
		{
			return this._Course1.Entity;
		}
		set
		{
			Course previousValue = this._Course1.Entity;
			if (((previousValue != value) 
						|| (this._Course1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Course1.Entity = null;
					previousValue.Students.Remove(this);
				}
				this._Course1.Entity = value;
				if ((value != null))
				{
					value.Students.Add(this);
					this._Course = value.ID;
				}
				else
				{
					this._Course = default(int);
				}
				this.SendPropertyChanged("Course1");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Student", Storage="_Department1", ThisKey="Department", OtherKey="ID", IsForeignKey=true)]
	public Department Department1
	{
		get
		{
			return this._Department1.Entity;
		}
		set
		{
			Department previousValue = this._Department1.Entity;
			if (((previousValue != value) 
						|| (this._Department1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Department1.Entity = null;
					previousValue.Students.Remove(this);
				}
				this._Department1.Entity = value;
				if ((value != null))
				{
					value.Students.Add(this);
					this._Department = value.ID;
				}
				else
				{
					this._Department = default(int);
				}
				this.SendPropertyChanged("Department1");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Year_Student", Storage="_Year1", ThisKey="Year", OtherKey="Year1", IsForeignKey=true)]
	public Year Year1
	{
		get
		{
			return this._Year1.Entity;
		}
		set
		{
			Year previousValue = this._Year1.Entity;
			if (((previousValue != value) 
						|| (this._Year1.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Year1.Entity = null;
					previousValue.Students.Remove(this);
				}
				this._Year1.Entity = value;
				if ((value != null))
				{
					value.Students.Add(this);
					this._Year = value.Year1;
				}
				else
				{
					this._Year = default(int);
				}
				this.SendPropertyChanged("Year1");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Placements(Placement entity)
	{
		this.SendPropertyChanging();
		entity.Student = this;
	}
	
	private void detach_Placements(Placement entity)
	{
		this.SendPropertyChanging();
		entity.Student = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Coordinators")]
public partial class Coordinator : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Co_ID;
	
	private string _Name;
	
	private int _Dept;
	
	private EntityRef<Department> _Department;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCo_IDChanging(string value);
    partial void OnCo_IDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDeptChanging(int value);
    partial void OnDeptChanged();
    #endregion
	
	public Coordinator()
	{
		this._Department = default(EntityRef<Department>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Co_ID", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Co_ID
	{
		get
		{
			return this._Co_ID;
		}
		set
		{
			if ((this._Co_ID != value))
			{
				this.OnCo_IDChanging(value);
				this.SendPropertyChanging();
				this._Co_ID = value;
				this.SendPropertyChanged("Co_ID");
				this.OnCo_IDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dept", DbType="Int NOT NULL")]
	public int Dept
	{
		get
		{
			return this._Dept;
		}
		set
		{
			if ((this._Dept != value))
			{
				if (this._Department.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnDeptChanging(value);
				this.SendPropertyChanging();
				this._Dept = value;
				this.SendPropertyChanged("Dept");
				this.OnDeptChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Coordinator", Storage="_Department", ThisKey="Dept", OtherKey="ID", IsForeignKey=true)]
	public Department Department
	{
		get
		{
			return this._Department.Entity;
		}
		set
		{
			Department previousValue = this._Department.Entity;
			if (((previousValue != value) 
						|| (this._Department.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Department.Entity = null;
					previousValue.Coordinators.Remove(this);
				}
				this._Department.Entity = value;
				if ((value != null))
				{
					value.Coordinators.Add(this);
					this._Dept = value.ID;
				}
				else
				{
					this._Dept = default(int);
				}
				this.SendPropertyChanged("Department");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.announcements")]
public partial class announcement : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _subject;
	
	private string _body;
	
	private int _to;
	
	private System.DateTime _date;
	
	private EntityRef<Year> _Year;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnsubjectChanging(string value);
    partial void OnsubjectChanged();
    partial void OnbodyChanging(string value);
    partial void OnbodyChanged();
    partial void OntoChanging(int value);
    partial void OntoChanged();
    partial void OndateChanging(System.DateTime value);
    partial void OndateChanged();
    #endregion
	
	public announcement()
	{
		this._Year = default(EntityRef<Year>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subject", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string subject
	{
		get
		{
			return this._subject;
		}
		set
		{
			if ((this._subject != value))
			{
				this.OnsubjectChanging(value);
				this.SendPropertyChanging();
				this._subject = value;
				this.SendPropertyChanged("subject");
				this.OnsubjectChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_body", DbType="Text", UpdateCheck=UpdateCheck.Never)]
	public string body
	{
		get
		{
			return this._body;
		}
		set
		{
			if ((this._body != value))
			{
				this.OnbodyChanging(value);
				this.SendPropertyChanging();
				this._body = value;
				this.SendPropertyChanged("body");
				this.OnbodyChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[to]", Storage="_to", DbType="Int NOT NULL")]
	public int to
	{
		get
		{
			return this._to;
		}
		set
		{
			if ((this._to != value))
			{
				this.OntoChanging(value);
				this.SendPropertyChanging();
				this._to = value;
				this.SendPropertyChanged("to");
				this.OntoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="DateTime NOT NULL")]
	public System.DateTime date
	{
		get
		{
			return this._date;
		}
		set
		{
			if ((this._date != value))
			{
				this.OndateChanging(value);
				this.SendPropertyChanging();
				this._date = value;
				this.SendPropertyChanged("date");
				this.OndateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Year_announcement", Storage="_Year", ThisKey="to", OtherKey="Year1", IsForeignKey=true)]
	public Year Year
	{
		get
		{
			return this._Year.Entity;
		}
		set
		{
			Year previousValue = this._Year.Entity;
			if (((previousValue != value) 
						|| (this._Year.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Year.Entity = null;
					previousValue.announcements.Remove(this);
				}
				this._Year.Entity = value;
				if ((value != null))
				{
					value.announcements.Add(this);
					this._to = value.Year1;
				}
				else
				{
					this._to = default(int);
				}
				this.SendPropertyChanged("Year");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
